[{"/home/expressionqueen/Desktop/react-modal/src/index.js":"1","/home/expressionqueen/Desktop/react-modal/src/reportWebVitals.js":"2","/home/expressionqueen/Desktop/react-modal/src/App.js":"3","/home/expressionqueen/Desktop/react-modal/src/components/Modals/modalX/modalX.js":"4","/home/expressionqueen/Desktop/react-modal/src/components/Modals/modalY/modalY.js":"5","/home/expressionqueen/Desktop/react-modal/src/components/Modals/modalZ/modalZ.js":"6","/home/expressionqueen/Desktop/react-modal/src/components/Modal/index.js":"7"},{"size":500,"mtime":1613753965000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1613753965000,"results":"10","hashOfConfig":"9"},{"size":1155,"mtime":1613843230932,"results":"11","hashOfConfig":"9"},{"size":1462,"mtime":1613837962000,"results":"12","hashOfConfig":"9"},{"size":2024,"mtime":1613837497000,"results":"13","hashOfConfig":"9"},{"size":2671,"mtime":1613843451211,"results":"14","hashOfConfig":"9"},{"size":977,"mtime":1613838166000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"cu71ub",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"/home/expressionqueen/Desktop/react-modal/src/index.js",[],["36","37"],"/home/expressionqueen/Desktop/react-modal/src/reportWebVitals.js",[],"/home/expressionqueen/Desktop/react-modal/src/App.js",[],"/home/expressionqueen/Desktop/react-modal/src/components/Modals/modalX/modalX.js",["38"],"import React, { useState } from \"react\";\nimport './modalX.css';\nimport image from '../../IMG/modal.jpg'\n\n\nconst ModalX = ({onCountChange, onCountChangeDec}) => {\n  const [loading, setLoading] = useState(true);\n  return (\n    <div className=\"modalY-wrapper\">\n      <div className=\"modalY-header\">\n        <p>Material details</p>\n        <span className=\"close-modalY-btn\">x</span>\n      </div>\n      <br/>\n      <div className=\"modalY-content\">\n        <div className=\"modalY-body\">\n          <div className='left-body'>\n            <img src={image} width=\"170px\" height=\"240px\"></img>\n          </div>\n          <div className='right-body'>\n            <h4> Assign to factory</h4>\n            <div className='factory'>\n              <label for=\"factory\">factory</label><br/>\n              <select name=\"factory\" id=\"factory\" onChange={() => setLoading(false)} >\n                <option value=\"\">Select factory</option>\n                <option value=\"x\">X</option>\n                <option value=\"y\">Y</option>\n                <option value=\"z\">Z</option>\n              </select>\n            </div>\n          </div>\n        </div> \n       \n      </div>\n      <br/>\n      <br/>\n      <br/>\n      <div className=\"modalY-footer\">\n        <button className=\"btn-back\" onClick={onCountChangeDec}>BACK</button>\n        <button className=\"btn-next\" disabled={loading} onClick={onCountChange}>NEXT</button>\n        </div>         \n    </div>\n  )\n};\n\nexport default ModalX;","/home/expressionqueen/Desktop/react-modal/src/components/Modals/modalY/modalY.js",["39"],"import React, { useState } from \"react\";\nimport './modalY.css';\nimport '../modalX/modalX.css';\nimport image from '../../IMG/modal.jpg'\n  \nconst ModalY = ({onCountChange, onCountChangeDec}) => {\n  const [loading, setLoading] = useState(true);\n  return (\n    <div className=\"modalY-wrapper\">\n      <div className=\"modalY-header\">\n        <p>Material details</p>\n        <span className=\"close-modalY-btn\">x</span>\n      </div>\n      <br/>     \n      <div className=\"modalY-content\">\n        <div className=\"modalY-body\">\n          <div className='left-body'>\n            <img src={image} width=\"170px\" height=\"240px\"></img>\n          </div>\n          <div className='right-body'>\n            <h4> Assign to factory</h4>\n            <div className='factory'>\n              <label for=\"factory\">factory</label><br/>\n              <select name=\"factory\" id=\"factory\" onChange={() => setLoading(false)} >\n                <option value=\"\">Select factory</option>\n                <option value=\"x\">X</option>\n                <option value=\"y\">Y</option>\n                <option value=\"z\">Z</option>\n              </select>\n            </div>\n            <div className='design'>\n              <label for=\"design\">Assign for design</label><br/>\n              <select name=\"factory\" id=\"design\" placeholder='design' onChange={() => setLoading(false)} >\n                <option value=\"\">Select design</option>\n                <option value=\"x\">Design name 1</option>\n                <option value=\"y\">Design name 2</option>\n                <option value=\"z\">Design name 3</option>\n                <option value=\"z\">Design name 4</option>\n              </select>\n            </div>\n          </div>\n        </div>     \n      </div>\n      <br/>\n      <br/>\n      <br/>\n      <div className=\"modalY-footer\">\n        <button className=\"btn-back\" onClick={onCountChangeDec}>BACK</button>\n        <button className=\"btn-next\" disabled={loading} onClick={onCountChange}>NEXT</button>\n        </div>  \n    </div>\n  )\n};\n\nexport default ModalY;","/home/expressionqueen/Desktop/react-modal/src/components/Modals/modalZ/modalZ.js",["40"],"import React, { useState } from \"react\";\nimport './modalZ.css';\nimport '../modalY/modalY.css';\nimport '../modalX/modalX.css';\nimport image from '../../IMG/modal.jpg'\n\nconst ModalZ = ({onCountChange, onCountChangeDec}) => {\n  const [loading, setLoading] = useState(true);\n  const [inventory, setInventory] = useState(0)\n  return (\n    <div className=\"modalY-wrapper\">\n      <div className=\"modalY-header\">\n        <p>Material details</p>\n        <span className=\"close-modalY-btn\">x</span>\n      </div>\n      <br/>\n      <div className=\"modalY-content\">\n        <div className=\"modalY-body\">\n          <div className='left-body'>\n            <img src={image} width=\"170px\" height=\"240px\"></img>\n          </div>\n          <div className='right-body'>\n            <h4> Assign to factory</h4>\n            <div className='factory'>\n              <label for=\"factory\">factory</label><br/>\n              <select name=\"factory\" id=\"factory\" onChange={() => setLoading(false)} >\n                <option value=\"\">Select factory</option>\n                <option value=\"x\">X</option>\n                <option value=\"y\">Y</option>\n                <option value=\"z\">Z</option>\n              </select>\n            </div>\n            <div className='design'>\n              <label for=\"design\">Assign for design</label><br/>\n              <select name=\"factory\" id=\"design\" placeholder='design' onChange={() => setLoading(false)} >\n                <option value=\"\">Select design</option>\n                <option value=\"x\">Design name 1</option>\n                <option value=\"y\">Design name 2</option>\n                <option value=\"z\">Design name 3</option>\n                <option value=\"z\">Design name 4</option>\n              </select>\n            </div>\n            <div className='quantity' onChange={(e) => setInventory(e.target.value)} >\n                <h5>Assign for design*</h5>\n                <input placeholder='Enter quantity'></input>\n            </div>\n            <div className='inventory'>\n            <h5>Available Inventory</h5>\n              <p>{inventory} meter</p></div>\n            <div className='challan'  onChange={() => setLoading(false)}>\n            <h5>Attached challan</h5>\n               <input type='file' placeholder='select file'></input>\n            </div>\n          </div>\n        </div> \n      </div>\n      <br/>\n      <br/>\n      <br/>\n      <div className=\"modalY-footer\">\n        <button className=\"btn-back\" onClick={onCountChangeDec} style={{marginRight:'-68%'}}>BACK</button>\n          <button className=\"btn-next\" disabled={loading} onClick={onCountChange}>ASSIGN TO FACTORY</button>\n        </div>\n    </div>\n  )\n};\n\nexport default ModalZ;","/home/expressionqueen/Desktop/react-modal/src/components/Modal/index.js",["41","42","43"],"import React, { useState } from \"react\";\nimport './index.css';\nimport image from '../IMG/modal.jpg'\nimport image1 from '../IMG/modal1.png'\n\nconst Modal = ({onCountChange}) => {\n\n  return (\n    <div className=\"modals-wrapper\"> \n      <div className=\"modals-content\">\n        <div className=\"modals-left\">\n          <div className='modal-design' onClick={onCountChange}>\n            <img src={image} width=\"150\" height=\"200\"></img>\n          </div>\n          <div className='modal-info'>\n            <p>ID: CT-15</p>\n            <h4>100% cotton /xyz color</h4>\n          </div>\n        </div> \n        <div className=\"modals-right\" >\n          <div className='modal-design' onClick={onCountChange} >\n            <img src={image1} width=\"150\" height=\"200\"></img>\n          </div>\n          <div className='modal-info'>\n            <p>ID: CT-15</p>\n            <h4>100% cotton /xyz color</h4>\n          </div>\n        </div>   \n      </div>\n    </div>\n  )\n};\n\nexport default Modal;",["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":18,"column":13,"nodeType":"52","endLine":18,"endColumn":59},{"ruleId":"50","severity":1,"message":"51","line":18,"column":13,"nodeType":"52","endLine":18,"endColumn":59},{"ruleId":"50","severity":1,"message":"51","line":20,"column":13,"nodeType":"52","endLine":20,"endColumn":59},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"51","line":13,"column":13,"nodeType":"52","endLine":13,"endColumn":55},{"ruleId":"50","severity":1,"message":"51","line":22,"column":13,"nodeType":"52","endLine":22,"endColumn":56},{"ruleId":"46","replacedBy":"57"},{"ruleId":"48","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["59"],["60"],"no-global-assign","no-unsafe-negation"]